local plr = game:GetService("Players").LocalPlayer
local plrName = game:GetService("Players").LocalPlayer.Name
--[[
--key system lol
_G.wl_key = "63y4tghrng"

if (_G.Key == _G.wl_key) then
    print("hi")
else
    plr:Kick("Security Error: Wrong Key!")
end
--]]
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Tommy1111112/C6F886E94F6FB976/main/orion.lua')))()

print("First Test")

local spinModule = require(game:GetService("ReplicatedStorage").Assets.Modules.ItemDataService.SpinToWinModule)
local spinindex = require(game:GetService("ReplicatedStorage").Assets.Modules.Library.index)["SPIN_TO_WIN"]

local potionIndex = require(game:GetService("ReplicatedStorage").Assets.Modules.Library.index)["POTIONS"]

local Window = OrionLib:MakeWindow({Name = "Cerium", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest", IntroText = "Cerium"})

local Welcome = Window:MakeTab({
	Name = "Welcome",
	Icon = "rbxassetid://7733946818",
	PremiumOnly = false
})

Welcome:AddParagraph("Welcome to Cerium", "Greetings, "..plrName..". We hope you have a wonderful experience whilst using Cerium.")
Welcome:AddParagraph("Join our Discord", "If you haven't already, please join our Discord server! It'd help us out a lot; https://discord.gg/TNxA6txwDX")
Welcome:AddParagraph("Cerium", "At Cerium, we strive to provide you with the highest quality Hubs for the lowest price. Created by saber..!#1128")
Welcome:AddButton({
	Name = "Quit Cerium",
	Callback = function()
        OrionLib:Destroy()
		print("Cerium Destroyed")
  	end    
})

local Tab = Window:MakeTab({
	Name = "Pets",
	Icon = "rbxassetid://7733954058",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Main Pets Exploits"
})

function MakeShiny(ItemID)
	local args = {
		[1] = "MakePetShiny",
		[2] = ItemID
	}
	game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer(unpack(args))
	return
end

Tab:AddButton({
	Name = "Make All Pets Shiny",
	Callback = function()
		local PetsFrame = plr.PlayerGui.ScreenGui.PetsFrame
		local PetGrid = PetsFrame.Main.Pages.Pets.List.Grid

		for i,v in pairs(PetGrid:GetChildren()) do
			if v:IsA("ImageButton") then
				MakeShiny(v.Name)
			end
		end
		OrionLib:MakeNotification({
			Name = "Made Eligible Pets Shiny",
			Content = "Successfully made all (x10) pets Shiny!",
			Image = "rbxassetid://7733954058",
			Time = 5
		})
  	end    
})

function DeleteItem(ItemID)
	local args = {
		[1] = "DeletePet",
		[2] = ItemID
	}
	game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer(unpack(args))
	return
end

Tab:AddButton({
	Name = "Delete Duped Pets",
	Callback = function()
		local PetsFrame = 	plr.PlayerGui.ScreenGui.PetsFrame
		local PetGrid = PetsFrame.Main.Pages.Pets.List.Grid
	
		local Pets = {}
	
		for i,v in pairs(PetGrid:GetChildren()) do
			if v:IsA("ImageButton") then
				if Pets[v.Name] then
					DeleteItem(v.Name)
				else
					Pets[v.Name] = true
				end
			end
		end
		OrionLib:MakeNotification({
			Name = "Deleted Pets",
			Content = "Successfully deleted all duped pets.",
			Image = "rbxassetid://7733954058",
			Time = 5
		})
  	end    
})

Tab:AddTextbox({
    Name = "Rename All Pets to [DOESN'T WORK]",
    Default = "Name",
    TextDisappear = false,
    Callback = function(PName)
        _G.PetName = PName


local Pets = plr.PlayerGui.ScreenGui.PetsFrame.Main.Pages.Pets.List.Grid

for i,v in pairs(Pets:GetChildren()) do
    if v.Name ~= "UIGridLayout" then
        game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer("RenamePet", tostring(v.Name), tostring(_G.PetName))
        task.delay(0.10)
    end
end
		
    end
})

function UnlockItem(ItemID)
	local args = {
		[1] = "SetPetLocked",
		[2] = ItemID,
		[3] = false
	}
	game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer(unpack(args))
	return
end

Tab:AddButton({
	Name = "Unlock All Pets!",
	Callback = function()
		local PetsFrame = plr.PlayerGui.ScreenGui.PetsFrame
		local PetGrid = PetsFrame.Main.Pages.Pets.List.Grid

		for i,v in pairs(PetGrid:GetChildren()) do
			if v:IsA("ImageButton") then
				UnlockItem(v.Name)
			end
		end
		OrionLib:MakeNotification({
			Name = "Unlocked Pets",
			Content = "Successfully unlocked all locked pets.",
			Image = "rbxassetid://7733992528",
			Time = 5
		})
  	end    
})



Tab:AddParagraph("Coming Soon", "All these features are currently a Work in Progress and none are functional.")


local tradeTab = Window:MakeTab({
	Name = "Trading",
	Icon = "rbxassetid://7733771891",
	PremiumOnly = false
})

local PlayerSelect; 

local playerNames = {}
for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
    table.insert(playerNames, player.Name)
end

tradeTab:AddDropdown({
	Name = "Target Player",
	Default = playerNames[1],
	Options = playerNames,
	Callback = function(v)
		PlayerSelect = v
	end
})

tradeTab:AddToggle({
    Name = "Auto Trade Target",
    Default = false,
    Callback = function(AT)
        if AT == true then
            _G.AUTOTRADE = AT
            while _G.AUTOTRADE == true do
                wait()
                local SelectedPlayer = game:GetService("Players"):FindFirstChild(PlayerSelect)
                if SelectedPlayer then
                    local args = {
                        [1] = "TradeSendRequest",
                        [2] = SelectedPlayer
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("NetworkRemoteEvent"):FireServer(unpack(args))
                end
                if AT == false then
                    _G.AUTOTRADE = false
                    break
                end
            end
        else
            _G.AUTOTRADE = false
        end
    end
})

tradeTab:AddToggle({
	Name = "Auto Accept Trades",
	Default = false,
	Callback = function(AC)
		if AC == true then
			_G.AUTOACCEPT = AC
			while _G.AUTOACCEPT == true do
				wait()
				local args = {
					[1] = "TradeReady",
				}
				local args2 = {
					[1] = "TradeConfirm"
				}

				game:GetService("ReplicatedStorage"):WaitForChild("NetworkRemoteEvent"):FireServer(unpack(args))
				game:GetService("ReplicatedStorage"):WaitForChild("NetworkRemoteEvent"):FireServer(unpack(args2))

				if AC == false then
					_G.AUTOACCEPT = false
					break
			end
			end
		else
			_G.AUTOACCEPT = false
		end
end
})

tradeTab:AddButton({
	Name = "Add All Pets",
	Callback = function()
		for i,pets in pairs(game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.TradeFrame.YourInventory.Grid:GetChildren()) do
			local args = {
				[1] = "TradeAddItem",
				[2] = pets.Name
			}
			game:GetService("ReplicatedStorage"):WaitForChild("NetworkRemoteEvent"):FireServer(unpack(args))
		end
	end
})

tradeTab:AddButton({
	Name = "Remove All Pets",
	Callback = function()
		for i,pets in pairs(game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.TradeFrame.YourInventory.Grid:GetChildren()) do
			local args = {
				[1] = "TradeRemoveItem",
				[2] = pets.Name
			}
			game:GetService("ReplicatedStorage"):WaitForChild("NetworkRemoteEvent"):FireServer(unpack(args))
		end
	end
})

--tradeTab:AddParagraph("Coming Soon", "Sorry, but this category is currently Work in Progress and is not available yet!")

local farmTab = Window:MakeTab({
	Name = "Auto Farming",
	Icon = "rbxassetid://7733674402",
	PremiumOnly = false
})


local AutoBlowMe = false

function SomeRandomFunction()
    task.spawn(function()
        while AutoBlowMe == true do
            wait(0.1)
            if AutoBlowMe == false then
                break
            end
            wait(0.01)
            local args = {
                [1] = "BlowBubble"
            }
            if AutoBlowMe == true then
                game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer(unpack(args))
                task.wait(0.15)
            else
                break
            end
            task.wait()
        end
    end)
end

farmTab:AddToggle({
    Name = "Auto Bubble",
    Default = false,
    Callback = function(Value)
        AutoBlowMe = Value
        if AutoBlowMe == true then
            SomeRandomFunction()
        end
    end
})


local eggSection = farmTab:AddSection({
    Name = "Egg Farming"
})
local EggV = false
local singHatchV = false
local triHatchV = false

function WhatTheFuck()
    task.spawn(function()
        while singHatchV do
            wait()
            if EggV ~= nil then
                wait()
                local args = {
                    [1] = "PurchaseEgg",
                    [2] = EggV,
                    [3] = "Single"
                }
                game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer(unpack(args))
                wait()
                if singHatchV == nil or singHatchV == false then
                    break
                end
            end
            if singHatchV == nil or singHatchV == false then
                break
            end
            wait()
        end
    end)
end

function WhatTheFuck2()
    task.spawn(function()
        while triHatchV do
            wait()
            if EggV ~= nil then
                wait()
                local args = {
                    [1] = "PurchaseEgg",
                    [2] = EggV,
                    [3] = "Triple"
                }
                game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer(unpack(args))
				
                wait()
                if triHatchV == nil or triHatchV == false then
                    break
                end
            end
            if triHatchV == nil or triHatchV == false then
                break
            end
            wait()
        end
    end)
end

eggSection:AddTextbox({
    Name = "Auto Hatch Egg",
    Default = "Common Egg",
    TextDisappear = false,
    Callback = function(EggValue)
        EggV = EggValue
		
    end
})
eggSection:AddToggle({
    Name = "Toggle Single Autohatch",
    Default = false,
    Callback = function(singHatch)
        singHatchV = singHatch
        if singHatchV == true then
            WhatTheFuck()
			OrionLib:MakeNotification({
				Name = "Auto Hatch toggled",
				Content = "Singular Auto Hatch has been toggled.",
				Image = "rbxassetid://8997385940",
				Time = 5
			})
        end
    end
})

eggSection:AddToggle({
    Name = "Toggle Triple Autohatch",
    Default = false,
    Callback = function(triHatch)
        triHatchV = triHatch
        if triHatchV == true then
            WhatTheFuck2()
			OrionLib:MakeNotification({
				Name = "Auto Hatch toggled",
				Content = "Triple Auto Hatch has been toggled.",
				Image = "rbxassetid://8997385940",
				Time = 5
			})
        end
    end
})

eggSection:AddButton({
	Name = "Remove Hatch Animation",
	Callback = function()
        local ParentModule = require(game:GetService("ReplicatedStorage").Assets.Modules.EggService)
    repeat
        wait()
        ParentModule = require(game:GetService("ReplicatedStorage").Assets.Modules.EggService)
    until ParentModule ~= nil
    local hatch = ParentModule.HatchEgg
        ParentModule.HatchEgg = (function()end or hatch)
		OrionLib:MakeNotification({
			Name = "Hatch Animation disabled",
			Content = "Hatch Animation has been disabled. Cannot be re-enabled!",
			Image = "rbxassetid://8997385940",
			Time = 5
		})
  	end    
})

-- FIXED farmTab:AddParagraph("Warning", "Sorry, but you are currently unable to disable Auto Bubbler without rejoining! This will be fixed soon.")

local playerTab = Window:MakeTab({
	Name = "Player",
	Icon = "rbxassetid://7743871002",
	PremiumOnly = false
})

local movementSection = playerTab:AddSection({
	Name = "Player Movements"
})

playerTab:AddSlider({
	Name = "Player Walkspeed",
	Min = 25,
	Max = 250,
	Default = 50,
	Color = Color3.fromRGB(49, 190, 20),
	Increment = 2,
	ValueName = "Walkspeed",
	Callback = function(SpeedVal)
		print(SpeedVal)
---@diagnostic disable-next-line: deprecated
        wait()
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = SpeedVal
        
	end    
})

playerTab:AddSlider({
	Name = "Player Jump Power",
	Min = 25,
	Max = 500,
	Default = 50,
	Color = Color3.fromRGB(190, 20, 20),
	Increment = 5,
	ValueName = "Jump Power",
	Callback = function(JumpVal)
		print(JumpVal)
---@diagnostic disable-next-line: deprecated
        wait()
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = JumpVal
        
	end    
})

local InfiniteJumpEnabled = false
local JumpHeight = 50;

playerTab:AddToggle({
    Name = "Toggle Infinite Jump",
    Default = false,
    Callback = function(InfValue)
        InfiniteJumpEnabled = InfValue
		OrionLib:MakeNotification({
			Name = "Infinite Jump Toggled",
			Content = "Infinite Jump has been toggled.",
			Image = "rbxassetid://7743871002",
			Time = 5
		})
    end    
})

local UserInputService = game:GetService('UserInputService')

function Action(Object, Function)
    if Object then
        Function(Object)
    end
end

local function JumpIfPossible()
    local Player = game.Players.LocalPlayer
    Action(Player.Character.Humanoid, function(self)
        if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
            Action(self.Parent.HumanoidRootPart, function(self)
                self.Velocity = Vector3.new(0, 50, 0)
            end)
        end
    end)
end

task.spawn(function()
    while true do
        local InputObject = UserInputService.InputBegan:Wait()
        if InputObject.UserInputType == Enum.UserInputType.Keyboard and InputObject.KeyCode == Enum.KeyCode.Space then
            if InfiniteJumpEnabled then
                JumpIfPossible()
            end
        end
        task.wait()
    end    
end)

playerTab:AddButton({
	Name = "Toggle Flight",
	--Default = false,
	Callback = function()
		repeat wait() 
		until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Head") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid") 
	local mouse = game.Players.LocalPlayer:GetMouse() 
	repeat wait() until mouse
	local plr = game.Players.LocalPlayer 
	local torso = plr.Character.Head 
	local flying = false
	local deb = true 
	local ctrl = {f = 0, b = 0, l = 0, r = 0} 
	local lastctrl = {f = 0, b = 0, l = 0, r = 0} 
	local maxspeed = 400 
	local speed = 5000 
	 
	function Fly() 
		local bg = Instance.new("BodyGyro", torso) 
		bg.P = 9e4 
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9) 
		bg.cframe = torso.CFrame 
		local bv = Instance.new("BodyVelocity", torso) 
		bv.velocity = Vector3.new(0,0.1,0) 
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9) 
		repeat wait() 
			plr.Character.Humanoid.PlatformStand = true 
			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then 
				speed = speed+.5+(speed/maxspeed) 
			if speed > maxspeed then 
				speed = maxspeed 
	end 
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then 
				speed = speed-1 
	if speed < 0 then 
		speed = 0 
	end 
	end 
	if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then 
		bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
		lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r} 
	elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then 
		bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
	else 
		bv.velocity = Vector3.new(0,0.1,0) 
	end 
	bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
	until not flying 
		ctrl = {f = 0, b = 0, l = 0, r = 0} 
		lastctrl = {f = 0, b = 0, l = 0, r = 0} 
		speed = 0 
		bg:Destroy() 
		bv:Destroy() 
		plr.Character.Humanoid.PlatformStand = false 
	end 
	mouse.KeyDown:connect(function(key) 
	if key:lower() == "g" then 
		if flying then flying = false 
	else 
		flying = true 
	Fly() 
	end 
	elseif key:lower() == "w" then 
		ctrl.f = 1 
	elseif key:lower() == "s" then 
		ctrl.b = -1 
	elseif key:lower() == "a" then 
		ctrl.l = -1 
	elseif key:lower() == "d" then 
		ctrl.r = 1 
	end 
	end) 
	mouse.KeyUp:connect(function(key) 
	if key:lower() == "w" then 
		ctrl.f = 0 
	elseif key:lower() == "s" then 
		ctrl.b = 0 
	elseif key:lower() == "a" then 
		ctrl.l = 0 
	elseif key:lower() == "d" then 
		ctrl.r = 0 
	 end 
 end)
	Fly()
	OrionLib:MakeNotification({
		Name = "Flight Enabled!",
		Content = "Use G to toggle it on/off",
		Image = "rbxassetid://7743871002",
		Time = 5
	})
  	end})



playerTab:AddParagraph("Note", "Once clicking Fly, use G to toggle Flight on/off!")

local otherPSection = playerTab:AddSection({
	Name = "Other"
})

playerTab:AddButton({
    Name = "Anti AFK",
    Callback = function()
		OrionLib:MakeNotification({
			Name = "Anti AFK Enabled!",
			Content = "Anti AFK has been turned on for this game session!",
			Image = "rbxassetid://7733765224",
			Time = 5
		})
        game:GetService("Players").LocalPlayer.Idled:connect(function()
            local vu = game:GetService("VirtualUser")
            vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            wait(1)
            vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        end)
    end})

local dupeTab = Window:MakeTab({
	Name = "Duping",
	Icon = "rbxassetid://7743866529",
	PremiumOnly = false
})

dupeTab:AddButton({
	Name = "Dupe Completed Trades",
	Callback = function()
		local counter = 0

		
function Death()
    spawn(function()
        local args = {
            [1] = "GetPlayerData"
        }
        game:GetService("ReplicatedStorage").NetworkRemoteFunction:InvokeServer(unpack(args))
    end)
end

while true do
    if counter >= 5 then
        break
    end
    
    for i=1,2500 do
        spawn(function()
            Death()
        end)
    end
    
    counter = counter + 1
    wait(1.5)
end
end
		
})

dupeTab:AddParagraph("More Soon", "Sorry, but this category is currently Work in Progress and doesn't have many features!")
dupeTab:AddParagraph("Important", "An amazing dupe checker is coming very soon, stay tuned!")

local miscTab = Window:MakeTab({
	Name = "Miscellaneous",
	Icon = "rbxassetid://7743878358",
	PremiumOnly = false
})


local visualsSection = miscTab:AddSection({
	Name = "Visuals"
})

visualsSection:AddTextbox({
	Name = "Hatch Any Pet Name",
	Default = "King Doggy",
	TextDisappear = false,
	Callback = function(Value)
		petName = Value
	end	  
})

visualsSection:AddTextbox({
	Name = "Hatch Pet - Egg Name",
	Default = "Common Egg",
	TextDisappear = false,
	Callback = function(Value)
		petEgg = Value
	end	  
})

visualsSection:AddDropdown({
	Name = "Type",
	Default = "Normal",
	Options = {"Normal", "Shiny", "Mythic", "Shiny Mythic"},
	Callback = function(Value)
		if Value == "Normal" then
			_G.ShinyPet = false
			_G.MythicPet = false
		elseif Value == "Mythic" then
			_G.ShinyPet = false
			_G.MythicPet = true
		elseif Value == "Shiny" then
			_G.ShinyPet = true
			_G.MythicPet = false
		elseif Value == "Shiny Mythic" then
			_G.ShinyPet = true
			_G.MythicPet = true
		end
	end    
})

visualsSection:AddButton({
	Name = "Send Hatch Message",
	Callback = function()
		_G.EggName = petEgg
		_G.PetName = petName
		--_G.ShinyPet = false
		--_G.MythicPet = false
		_G.PlayerName = game.Players.LocalPlayer.Name
		wait(0.1)
		local AspectHubCode = loadstring(game:HttpGet('https://raw.githubusercontent.com/DesyncDeveloper/HowDoYouCode-/main/I%20forgot%20how%20to%20code%20this...'))()
		
		AspectHubCode.setContext(5)
		
		local GameServices = require(game.ReplicatedStorage.Assets.Modules.Services)
		local ItemDataService = GameServices:GetService("ItemDataService")
		local EggModule = ItemDataService("EggModule")
		local PetModule = ItemDataService("PetModule")
		
		function GrabPetInfo(Egg, Pet)
		
			local TempData = {}
			local Added = {}
			local PetInfo = {}
		
			for i, v in pairs(EggModule[Egg]["Rarities"]) do
				table.insert(TempData, v)
				Added[v[1]] = true
			end
		
			for i, v in pairs(EggModule[Egg]["Ignore"]) do
				if Added[v] == false or Added[v] == nil then
					table.insert(TempData, {v})
				end
			end
		
			for i, v in pairs(TempData) do
				if v[1] == Pet then
					PetInfo[1] = v[1]
					PetInfo[2] = v[2]
					break
				end
			end
		
			return PetInfo
		end
		
		function DisplayMessage(PlayerName, Pet, Shiny, Mythic, Chance)
			if not Chance then
				game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
					Text = ("[Server]: %s just hatched a Legendary '%s'!"):format(PlayerName, Pet),
					Color = Color3.fromRGB(0, 255, 255)
				})
			else
				local TotalChance = Chance
				local ColorData1, ColorData2, ColorData3 = Color3.toHSV(((function()
					if TotalChance <= 0.0001 then
						return Color3.fromRGB(255, 0, 100)
					end
					if TotalChance < 0.005 then
						return Color3.fromRGB(0, 255, 0)
					end
					return Color3.fromRGB(0, 255, 255)
				end)()))
		
				local ShinyChance
				local MythicChance
		
				if Shiny then
					ShinyChance = 0.25
				else
					ShinyChance = 0
				end
		
				if Mythic then
					MythicChance = 0.15
				else
					MythicChance = 0
				end
		
				if Shiny then
					TotalChance = TotalChance * 0.01
				end
				if Mythic then
					TotalChance = TotalChance * 0.005
				end
		
				if Mythic then
					Pet = Pet:gsub("Mythic ", "")
				end
		
				local ChatMessageData = {}
				local ShinyString
				local MythicString
				if Shiny then
					ShinyString = "Shiny "
				else
					ShinyString = ""
				end
		
				if Mythic then
					MythicString = "Mythic"
				else
					MythicString = "Legendary"
				end
		
				ChatMessageData.Text = ("[Server]: %s just hatched a %s%s '%s' (%s%%)!"):format(PlayerName, ShinyString, MythicString, Pet, tostring(TotalChance))
				ChatMessageData.Color = Color3.fromHSV((ColorData1 + (ShinyChance + MythicChance)) % 1, ColorData2, ColorData3)
				game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", ChatMessageData)
			end
		end
		
		local Egg = _G.EggName
		local Pet = _G.PetName
		local Shiny = _G.ShinyPet
		local Mythic = _G.MythicPet
		local PlayerName = _G.PlayerName
		
		local PetInfo = GrabPetInfo(Egg, Pet)
		
		if PetModule[Pet].Rarity == "Legendary" or PetModule[Pet].Rarity == "Secret" then
			DisplayMessage(PlayerName, Pet, Shiny, Mythic, PetInfo[2])
			OrionLib:MakeNotification({
				Name = "Hatch message sent!",
				Content = "The hatch message you've entered has been sent to your chat!",
				Image = "rbxassetid://8997385940",
				Time = 5
			})
		else
			DisplayMessage(PlayerName, Pet, Shiny, Mythic, nil)
			OrionLib:MakeNotification({
				Name = "Hatch message sent!",
				Content = "The hatch message you've entered has been sent to your chat!",
				Image = "rbxassetid://8997385940",
				Time = 5
			})
		end
		
  	end    
})

visualsSection:AddButton({
	Name = "Optimize Performance",
	Callback = function()
        local v = workspace.Worlds.Overworld:GetChildren()
		for i = 1, #v do
			if v[i].Name == "Model" then
				v[i]:Destroy()
	end
	OrionLib:MakeNotification({
		Name = "Performance Optimized!",
		Content = "Excess meshes removed to reduce lag.",
		Image = "rbxassetid://7743873871",
		Time = 5
	})

end
wait(1)
local ww = workspace.Worlds.Overworld.Border:GetChildren()
for i = 1, #ww do
	if ww[i].Name == "Wall" then
		ww[i]:Destroy()
	end
end
wait(1)
local descendants = game.Workspace.FloatingIslands.Overworld:GetDescendants()
for index, descendant in pairs(descendants) do
	if descendant.Name == "Model" then
		descendant:Destroy()
	end
end
wait(1)
for d,eggy in pairs(game.Workspace.Eggs:GetChildren() ) do
	if eggy:FindFirstChild("Secondary") then
		local egg_cleaner = eggy:FindFirstChild("Secondary")
		egg_cleaner:Destroy()
	end
	if eggy:FindFirstChild("Primary") then
		local egg_cleaner = eggy:FindFirstChild("Primary")
		egg_cleaner:Destroy()
	end
	if eggy:FindFirstChild("Decore") then
		local egg_cleaner = eggy:FindFirstChild("Decore")
		egg_cleaner:Destroy()
	end
end

local descendants = game.Workspace:GetDescendants()
for index, descendant in pairs(descendants) do
	if descendant.Name == "Cloud" then
		descendant:Destroy()
	end
	if descendant.Name == "NPCs" then
		descendant:Destroy()
	end
	if descendant.Name == "Tree" then
		descendant:Destroy()
	end
	if descendant.Name == "Mountains" then
		descendant:Destroy()
	end
	if descendant.Name == "Snow" then
		descendant:Destroy()
	end
	if descendant.Name == "Building" then
		descendant:Destroy()
	end
	if descendant.Name == "DarkCloud" then
		descendant:Destroy()
	end
	if descendant.Name == "VoidCloud" then
		descendant:Destroy()
	end
	if descendant.Name == "BlueCloud" then
		descendant:Destroy()
	end
	if descendant.Name == "PinkCloud" then
		descendant:Destroy()
	end
	if descendant.Name == "PurpleCloud" then
		descendant:Destroy()
	end
	if descendant.Name == "Small Asteroid" then
		descendant:Destroy()
	end
	if descendant.Name == "Trampoline" then
		descendant:Destroy()
	end
	if descendant.Name == "BigTrampoline" then
		descendant:Destroy()
	end
	if descendant.Name == "Asteroid" then
		descendant:Destroy()
	end
	if descendant.Name == "Mars" then
		descendant:Destroy()
	end
	if descendant.Name == "Jupiter" then
		descendant:Destroy()
	end
	if descendant.Name == "Rocket" then
		descendant:Destroy()
	end
	if descendant.Name == "VoidAsteroid" then
		descendant:Destroy()
	end
	if descendant.Name == "PurpleAsteroid" then
		descendant:Destroy()
	end
	if descendant.Name == "UFO" then
		descendant:Destroy()
	end
	if descendant.Name == "Jolly2" then
		descendant:Destroy()
	end
	if descendant.Name == "Jolly1" then
		descendant:Destroy()
	end
	if descendant.Name == "Candy1" then
		descendant:Destroy()
	end
	if descendant.Name == "Candy2" then
		descendant:Destroy()
	end
	if descendant.Name == "Candy3" then
		descendant:Destroy()
	end
	if descendant.Name == "Candy4" then
		descendant:Destroy()
	end
	if descendant.Name == "Candy5" then
		descendant:Destroy()
	end
	if descendant.Name == "Candy6" then
		descendant:Destroy()
	end
	if descendant.Name == "Toy2" then
		descendant:Destroy()
	end
	if descendant.Name == "Toy3" then
		descendant:Destroy()
	end
	if descendant.Name == "Toy2" then
		descendant:Destroy()
	end
	if descendant.Name == "Toy1" then
		descendant:Destroy()
	end
	if descendant.Name == "Orange2" then
		descendant:Destroy()
	end
	if descendant.Name == "Orange1" then
		descendant:Destroy()
	end
end

local w = workspace.Worlds.Overworld.Mountains:GetChildren()
for i = 1, #w do
	if w[i].Name == "Model" then
		w[i]:Destroy()
	end
end


local descendants = game.Workspace.FloatingIslands.Overworld:GetDescendants()
for index, descendant in pairs(descendants) do
	if descendant.Name == "Model" then
		descendant:Destroy()
	end
end
  	    
	  local decalsyeeted = true
	  local g = game
	  local w = g.Workspace
	  local l = g.Lighting
	  local t = w.Terrain
	  t.WaterWaveSize = 0
	  t.WaterWaveSpeed = 0
	  t.WaterReflectance = 0
	  t.WaterTransparency = 0
	  l.GlobalShadows = false
	  l.FogEnd = 9e9
	  l.Brightness = 0
	  settings().Rendering.QualityLevel = "Level01"
	  for i, v in pairs(g:GetDescendants()) do
		  if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
			  v.Material = "Plastic"
			  v.Reflectance = 0
		  elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
			  v.Transparency = 1
		  elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
			  v.Lifetime = NumberRange.new(0)
		  elseif v:IsA("Explosion") then
			  v.BlastPressure = 1
			  v.BlastRadius = 1
		  elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
			  v.Enabled = false
		  elseif v:IsA("MeshPart") then
			  v.Material = "Plastic"
			  v.Reflectance = 0
			  v.TextureID = 10385902758728957
		  end
	  end
	  for i, e in pairs(l:GetChildren()) do
		  if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
			  e.Enabled = false
		  end
	  end
  end
})

visualsSection:AddParagraph("Note", "Please note that this is only client side and is not visible to other players!")

local Fun = Window:MakeTab({
	Name = "Other",
	Icon = "rbxassetid://7734053495",
	PremiumOnly = false
})

Fun:AddButton({
	Name = "Give BTools",
	Callback = function()

		backpack = game:GetService("Players").LocalPlayer.Backpack

		hammer = Instance.new("HopperBin")
		hammer.Name = "Hammer"
		hammer.BinType = 4
		hammer.Parent = backpack
		
		cloneTool = Instance.new("HopperBin")
		cloneTool.Name = "Clone"
		cloneTool.BinType = 3
		cloneTool.Parent = backpack
		
		grabTool = Instance.new("HopperBin")
		grabTool.Name = "Grab"
		grabTool.BinType = 2
		grabTool.Parent = backpack
		OrionLib:MakeNotification({
			Name = "BTools Received",
			Content = "You have now received your BTools.",
			Image = "rbxassetid://7733955511",
			Time = 5
		})
	end
	
})


local deletePotions = false

function DelPots()
        while true do
            local args = {
                [1] = "GetPlayerData"
            }
            
            local playerData = game:GetService("ReplicatedStorage").NetworkRemoteFunction:InvokeServer(unpack(args))
			for k,v in pairs(playerData[potionIndex]) do
				if v[2] == "Enchant1" or v[2] == "Level1" then
					local args = {
						[1] = "DeletePotion",
						[2] = v[1],
					}
					game:GetService("ReplicatedStorage").NetworkRemoteFunction:FireServer(unpack(args))
					wait()       
				end
			end
		
		wait(1)
        end
end

Fun:AddButton({
    Name = "Delete Level 1 Potions",
    --Flag = "delpotion1s",
    Callback = function(delpotions)
        deletePotions = delpotions
        DelPots()
		OrionLib:MakeNotification({
			Name = "Potions Deleted",
			Content = "All +1 Level and +1 Enchant Potions have been deleted!",
			Image = "rbxassetid://7743873871",
			Time = 5
		})
    end
})



--Fun:AddParagraph("Note","This category is just for fun stuff, not much here sadly :(")



local Credits = Window:MakeTab({
	Name = "Credits",
	Icon = "rbxassetid://7733956134",
	PremiumOnly = false
})

Credits:AddLabel("Made by saber..!#1128")
Credits:AddLabel("Thank you to MrDonutchiee#0709 for suggestions!")
Credits:AddLabel("Extra Credits to Desync#0069 and Primelus#5421")
Credits:AddButton({
	Name = "Quit Cerium",
	Callback = function()
        OrionLib:Destroy()
		print("Cerium Destroyed")
  	end    
})


Credits:AddButton({
	Name = "Secret Button",
	Callback = function()
		local clonedegg = game.ReplicatedStorage.Assets.Eggs["1B Egg"]:Clone()
		clonedegg.Parent = game.Workspace
	end
})

while true do
	wait()
	print("Made by saber..!#1128")
end

OrionLib:Init()
